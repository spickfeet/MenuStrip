<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>